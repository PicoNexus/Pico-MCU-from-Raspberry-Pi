How to set up Pi Pico SDK on Windows 10 x64

Largely based on RP2040 Development Setup on Windows https://len42.github.io/rp2040-dev-setup.html

1. Make two folder c:\DEv and C:\Pico

2. Install gcc-arm-11.2-2022.02-mingw-w64-i686-arm-none-eabi.exe from https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/downloads to C:\Dev\ArmGNUToolchain - add path to environment variable during install.

3. Install cmake-3.23.2-windows-x86_64.msi from https://cmake.org/download/ to C:\Dev\CMake\ - add Cmake to the system PATH for all users.

4. Install vs_BuildTools.exe from https://aka.ms/vs/17/release/vs_BuildTools.exe to the default folder - select C++ development tools. It was a 1.62 GB download.

5. Install python-3.10.5-amd64.exe from https://www.python.org/downloads/release/python-3105/ to C:\Dev\Python310 - select Add Python to PATH and also select to remove the max path length.

6. Install Git-2.36.1-64-bit.exe from https://git-scm.com/download/win to C:\Dev\Git - follow the instructions from https://len42.github.io/rp2040-dev-setup.html
to the letter: 

    Destination Location: Default (or not)
    Select Components: Default
    Default editor: Select one you like.
    Name of the initial branch: Let Git decide
    PATH environment: Git from the command line and also from 3rd-party software
    SSH executable: Use bundled OpenSSH
    HTTPS transport backend: Use the OpenSSL library
    Line ending conversion: Checkout as-is, commit as-is
    Terminal emulator for Git Bash: Select either option
    Default behavior of “git pull”: Default (f-f or merge)
    Credential helper: Default (Git Credential Manager Core)
    Extra options: Default (Enable file system caching on, Enable symbolic links off)
    Experimental options: Select “Enable experimental support for pseudo consoles”

7. Do as below to install the Pico SDK

C:\Windows\system32>cd c:\Pico

c:\Pico>git clone -b master https://github.com/raspberrypi/pico-sdk.git
Cloning into 'pico-sdk'...
remote: Enumerating objects: 5219, done.
remote: Counting objects: 100% (278/278), done.
remote: Compressing objects: 100% (192/192), done.
remote: Total 5219 (delta 94), reused 173 (delta 50), pack-reused 4941
Receiving objects: 100% (5219/5219), 2.58 MiB | 1.35 MiB/s, done.
Resolving deltas: 100% (2563/2563), done.

c:\Pico>cd pico-sdk

c:\Pico\pico-sdk>cd ..

c:\Pico>git clone -b master https://github.com/raspberrypi/pico-examples.git
Cloning into 'pico-examples'...
remote: Enumerating objects: 1990, done.
remote: Counting objects: 100% (808/808), done.
remote: Compressing objects: 100% (291/291), done.
remote: Total 1990 (delta 629), reused 517 (delta 517), pack-reused 1182
Receiving objects: 100% (1990/1990), 7.35 MiB | 1.33 MiB/s, done.
Resolving deltas: 100% (1077/1077), done.

c:\Pico>cd pico-examples

c:\Pico\pico-examples>cd ..

c:\Pico>git clone -b master https://github.com/raspberrypi/pico-extras.git
Cloning into 'pico-extras'...
remote: Enumerating objects: 372, done.
remote: Counting objects: 100% (37/37), done.
remote: Compressing objects: 100% (16/16), done.
remote: Total 372 (delta 23), reused 22 (delta 21), pack-reused 335
Receiving objects: 100% (372/372), 160.05 KiB | 347.00 KiB/s, done.
Resolving deltas: 100% (160/160), done.

c:\Pico>cd pico-extras

c:\Pico\pico-extras>cd ..

c:\Pico>git clone -b master https://github.com/raspberrypi/pico-playground.git
Cloning into 'pico-playground'...
remote: Enumerating objects: 297, done.
remote: Counting objects: 100% (78/78), done.
remote: Compressing objects: 100% (41/41), done.
remote: Total 297 (delta 49), reused 42 (delta 37), pack-reused 219
Receiving objects: 100% (297/297), 2.23 MiB | 1.24 MiB/s, done.
Resolving deltas: 100% (116/116), done.

c:\Pico>cd pico-playground

c:\Pico\pico-playground>git submodule update --init

c:\Pico\pico-playground>cd ..

c:\Pico>cd pico-extras

c:\Pico\pico-extras>git submodule update --init

c:\Pico\pico-extras>git submodule update --init
Submodule 'lwip' (https://git.savannah.nongnu.org/git/lwip.git) registered for path 'lib/lwip'
Cloning into 'C:/Pico/pico-extras/lib/lwip'...
Submodule path 'lib/lwip': checked out 'c385f31076b27efb8ee37f00cb5568783a58f299'

c:\Pico\pico-extras>cd ..

c:\Pico>cd pico-examples

c:\Pico\pico-examples>git submodule update --init

c:\Pico\pico-examples>cd ..

c:\Pico>cd pico-sdk

c:\Pico\pico-sdk>git submodule update --init
Submodule 'tinyusb' (https://github.com/hathach/tinyusb.git) registered for path 'lib/tinyusb'
Cloning into 'C:/Pico/pico-sdk/lib/tinyusb'...
Submodule path 'lib/tinyusb': checked out '4bfab30c02279a0530e1a56f4a7c539f2d35a293'

8. Then run the first build of all the pico-examples

c:\Pico\pico-sdk>

c:\Pico\pico-sdk>setx PICO_SDK_PATH "C:\Pico\pico-sdk"

SUCCESS: Specified value was saved.

c:\Pico\pico-sdk>

Run Developer Command Propmt as Admin!!
=================================================
**********************************************************************
** Visual Studio 2022 Developer Command Prompt v17.2.5
** Copyright (c) 2022 Microsoft Corporation
**********************************************************************
[ERROR:team_explorer.bat] Directory not found : "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\IDE\CommonExtensions\Microsoft\TeamFoundation\Team Explorer"

C:\Windows\System32>cd c:\Pico

c:\Pico>cd pico-examples\

c:\Pico\pico-examples>cd build

c:\Pico\pico-examples\build>cmake -G "NMake Makefiles" ..
Using PICO_SDK_PATH from environment ('C:\Pico\pico-sdk')
PICO_SDK_PATH is C:/Pico/pico-sdk
Defaulting PICO_PLATFORM to rp2040 since not specified.
Defaulting PICO platform compiler to pico_arm_gcc since not specified.
-- Defaulting build type to 'Release' since not specified.
PICO compiler is pico_arm_gcc
-- The C compiler identification is GNU 11.2.1
-- The CXX compiler identification is GNU 11.2.1
-- The ASM compiler identification is GNU
-- Found assembler: C:/Dev/ArmGNUToolchain/bin/arm-none-eabi-gcc.exe
Build type is Release
Defaulting PICO target board to pico since not specified.
Using board configuration from C:/Pico/pico-sdk/src/boards/include/boards/pico.h
-- Found Python3: C:/Dev/Python310/python.exe (found version "3.10.5") found components: Interpreter
TinyUSB available at C:/Pico/pico-sdk/lib/tinyusb/src/portable/raspberrypi/rp2040; enabling build support for USB.
-- Configuring done
-- Generating done
-- Build files have been written to: C:/Pico/pico-examples/build

c:\Pico\pico-examples\build>nmake
bi.S.obj
[ 23%] Building C object i2c/bmp280_i2c/CMakeFiles/bmp280_i2c.dir/C_/Pico/pico-sdk/src/rp2_common/pico_float/float_init_rom.c.obj
[ 23%] Building C object i2c/bmp280_i2c/CMakeFiles/bmp280_i2c.dir/C_/Pico/pico-sdk/src/rp2_common/pico_float/float_math.c.obj

....

[100%] Building ASM object watchdog/hello_watchdog/CMakeFiles/hello_watchdog.dir/C_/Pico/pico-sdk/src/rp2_common/pico_standard_link/crt0.S.obj
[100%] Building CXX object watchdog/hello_watchdog/CMakeFiles/hello_watchdog.dir/C_/Pico/pico-sdk/src/rp2_common/pico_standard_link/new_delete.cpp.obj
[100%] Building C object watchdog/hello_watchdog/CMakeFiles/hello_watchdog.dir/C_/Pico/pico-sdk/src/rp2_common/pico_standard_link/binary_info.c.obj
[100%] Building C object watchdog/hello_watchdog/CMakeFiles/hello_watchdog.dir/C_/Pico/pico-sdk/src/rp2_common/pico_stdio/stdio.c.obj
[100%] Building C object watchdog/hello_watchdog/CMakeFiles/hello_watchdog.dir/C_/Pico/pico-sdk/src/rp2_common/pico_stdio_uart/stdio_uart.c.obj
[100%] Linking CXX executable hello_watchdog.elf
[100%] Built target hello_watchdog

c:\Pico\pico-examples\build>



